{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/crafting-corner/src/app/products/%5Bslug%5D/page.tsx"],"sourcesContent":["/* --------------------------------------------------------------------------\n   Product details page (server component)\n--------------------------------------------------------------------------- */\nimport { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\n\nimport ProductView from '../../../components/ProductView';\nimport {\n  allCategories,\n  loadProducts,\n  type Product,\n} from '../../../lib/loaders.server';\n\n/* ---------- static-site helpers ---------- */\nexport const dynamicParams = false;\n\nexport async function generateStaticParams() {\n  const params: { slug: string }[] = [];\n  for (const cat of allCategories) {\n    const products = await loadProducts(cat.slug);\n    products.forEach((p) => params.push({ slug: p.slug }));\n  }\n  return params;\n}\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: { slug: string };\n}): Promise<Metadata> {\n  const product = await findProduct(params.slug);\n  if (!product) return {};\n\n  const mainImg = Array.isArray(product.img) ? product.img[0] : product.img;\n\n  return {\n    title: `${product.title} | Crafting Corner`,\n    description:\n      product.description ??\n      `Premium ${product.title} crafted for modern Indian homes.`,\n    openGraph: { images: [mainImg] },\n  };\n}\n\n/* ---------- helpers ---------- */\nasync function findProduct(slug: string): Promise<Product | null> {\n  for (const cat of allCategories) {\n    const products = await loadProducts(cat.slug);\n    const found = products.find((p) => p.slug === slug);\n    if (found) return found;\n  }\n  return null;\n}\n\n/* ---------- page ---------- */\nexport default async function ProductPage({\n  params,\n}: {\n  params: { slug: string };\n}) {\n  const product = await findProduct(params.slug);\n  if (!product) notFound();\n\n  const related = (\n    await loadProducts(product.category) // product.category holds the cat-slug\n  )\n    .filter((p) => p.slug !== product.slug)\n    .slice(0, 3);\n\n  return <ProductView product={product} related={related} />;\n}"],"names":[],"mappings":"AAAA;;4EAE4E;;;;;;;AAE5E;AAEA;AACA;AAHA;AAGA;AAAA;;;;;AAOO,MAAM,gBAAgB;AAEtB,eAAe;IACpB,MAAM,SAA6B,EAAE;IACrC,KAAK,MAAM,OAAO,wHAAA,CAAA,gBAAa,CAAE;QAC/B,MAAM,WAAW,MAAM,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE,IAAI,IAAI;QAC5C,SAAS,OAAO,CAAC,CAAC,IAAM,OAAO,IAAI,CAAC;gBAAE,MAAM,EAAE,IAAI;YAAC;IACrD;IACA,OAAO;AACT;AAEO,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,UAAU,MAAM,YAAY,OAAO,IAAI;IAC7C,IAAI,CAAC,SAAS,OAAO,CAAC;IAEtB,MAAM,UAAU,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,QAAQ,GAAG,CAAC,EAAE,GAAG,QAAQ,GAAG;IAEzE,OAAO;QACL,OAAO,GAAG,QAAQ,KAAK,CAAC,kBAAkB,CAAC;QAC3C,aACE,QAAQ,WAAW,IACnB,CAAC,QAAQ,EAAE,QAAQ,KAAK,CAAC,iCAAiC,CAAC;QAC7D,WAAW;YAAE,QAAQ;gBAAC;aAAQ;QAAC;IACjC;AACF;AAEA,iCAAiC,GACjC,eAAe,YAAY,IAAY;IACrC,KAAK,MAAM,OAAO,wHAAA,CAAA,gBAAa,CAAE;QAC/B,MAAM,WAAW,MAAM,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE,IAAI,IAAI;QAC5C,MAAM,QAAQ,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;QAC9C,IAAI,OAAO,OAAO;IACpB;IACA,OAAO;AACT;AAGe,eAAe,YAAY,EACxC,MAAM,EAGP;IACC,MAAM,UAAU,MAAM,YAAY,OAAO,IAAI;IAC7C,IAAI,CAAC,SAAS,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD;IAErB,MAAM,UAAU,CACd,MAAM,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,QAAQ,EAAE,sCAAsC;IAC7E,EACG,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,QAAQ,IAAI,EACrC,KAAK,CAAC,GAAG;IAEZ,qBAAO,6WAAC,iIAAA,CAAA,UAAW;QAAC,SAAS;QAAS,SAAS;;;;;;AACjD"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}